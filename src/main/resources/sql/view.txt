CREATE VIEW VIEW_PRODUCT_CATEGORY AS
SELECT P.ROW_ID,P.CATEGORY_ID,CONCAT(C1.LIST_NAME,'/',C2.LIST_NAME,'/',C3.LIST_NAME) AS LIST_NAME ,P.PRODUCT_NAME,P.BRAND_NAME,P.IMG_PATH,P.PRODUCT_PRICE,P.INVENTORY,P.GO_OUT_FLAG,P.PRODUCT_INFO,P.ACTIVE_FLAG,P.CREATE_BY,P.CREATE_DATE,P.UPDATE_BY,P.UPDATE_DATE 
FROM TB_CATEGORY C1 JOIN TB_CATEGORY C2 ON C1.ROW_ID=C2.PAR_ID JOIN TB_CATEGORY C3 ON C2.ROW_ID=C3.PAR_ID JOIN
TB_PRODUCT P  ON P.CATEGORY_ID= C3.ROW_ID 

CREATE VIEW VIEW_ADDRESS_USER AS
SELECT USER_NAME, A.`ROW_ID`,`USER_ID`,`PROVINCE`,`CITY`,`DISTRICT`,`DETAILED_ADRESS`,`ADRESS_PHONE`,`POSTCODE`,A.`ACTIVE_FLAG` FROM TB_ADDRESS A JOIN TB_USER U  ON A.USER_ID=U.ROW_ID 

CREATE VIEW VIEW_PRODUCT_ORDER_LIST AS
SELECT P.PRODUCT_NAME,P.IMG_PATH,P.PRODUCT_PRICE,OL.ROW_ID,OL.ORDER_ID,OL.PRODUCT_ID,OL.BUY_COUNT,OL.SUM_PRICE FROM TB_PRODUCT P JOIN TB_ORDER_LIST OL ON P.ROW_ID=OL.PRODUCT_ID 

CREATE VIEW V_AREA_3 AS
SELECT
  C3.ROW_ID,
  C3.AREA_CODE,
  CONCAT(C1.AREA_NAME, C2.AREA_NAME,C3.AREA_NAME) AS AREA_NAME,
  C3.`AREA_RUNK`,
  C3.`PARENT_CODE`
FROM
  YT_CD_AREA C3
  LEFT JOIN YT_CD_AREA C2
  /*ON 是对left join 提供条件，一般放置两级数据的关联属性。*/
    ON C3.`PARENT_CODE` = C2.`AREA_CODE`
    /*left join 时如果 对被关联数据还有其它条件，使用AND 设置*/
    AND C2.`AREA_RUNK` = 2
  LEFT JOIN YT_CD_AREA C1
    ON C2.`PARENT_CODE` = C1.`AREA_CODE`
    AND C1.`AREA_RUNK` = 1
WHERE C3.`AREA_RUNK` = 3

